{"version":3,"sources":["components/src/DisplayHeader.js","components/src/DisplayInput.js","components/src/services/phoneService.js","components/src/ErrorSuccessMessage.js","components/src/App.js","index.js"],"names":["DisplayHeader","message","DisplayInput","onChangeHandler","inputValue","onChange","value","baseUrl","axios","get","then","response","data","newEntry","post","entryId","delete","newPhone","put","DisplayErrorSuccess","success","callback","className","DisplayEntry","name","number","deleteHandler","id","onClick","DisplayEntries","entries","regVal","onClickDeleteHandler","regExp","RegExp","newEntries","filter","entry","test","map","key","App","useState","userName","setUserName","userPhone","setPhone","newFilter","setNewFilter","entryList","setEntryList","errorSuccess","setErrorSuccess","window","confirm","phoneService","phoneDatabase","useEffect","event","target","onSubmit","preventDefault","newPhoneDatabase","some","phoneToReplaceId","find","newEntry2","catch","setTimeout","addedPhone","concat","type","ReactDOM","render","document","getElementById"],"mappings":"mNAUeA,EARO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACI,4BACKA,ICKEC,EARM,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,QAASE,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,WAC9C,OACA,6BACKH,EADL,IACc,2BAAOI,SAAUF,EAAiBG,MAAOF,M,gBCHrDG,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfG,SAAAC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVK,SAAAG,GAEhB,OADgBP,IAAMQ,OAAOT,EAAO,WAAOQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALM,SAACG,EAASE,GAE3B,OADgBT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAWE,GACpCP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCG9BO,EAtBa,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,QAASmB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAC7C,OAAGD,GACCC,IAEI,6BACI,wBAAIC,UAAU,WACTrB,MAKboB,IAEI,6BACI,wBAAIC,UAAU,SACTrB,MCTfsB,G,MAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,cAAeC,EAAQ,EAARA,GACnD,OACE,6BACGH,EADH,IACUC,EACR,4BAAQG,QAAS,kBAAMF,EAAcC,KAArC,aAOAE,EAAiB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,qBACnCC,EAAS,IAAIC,OAAOH,EAAQ,KAE5BI,EADiBL,EAAQM,QAAO,SAAAC,GAAK,OAAIJ,EAAOK,KAAKD,EAAMb,SAC/Be,KAAI,SAAAF,GAAK,OAAI,kBAAC,EAAD,CAAcG,IAAKH,EAAMV,GAAIH,KAAMa,EAAMb,KAAMC,OAAQY,EAAMZ,OAAQC,cAAeM,EAAsBL,GAAIU,EAAMV,QAEnK,OACE,6BACGQ,IA6JQM,EAxJH,WAAM,IAAD,EACmBC,mBAAS,IAD5B,mBACPC,EADO,KACGC,EADH,OAEiBF,mBAAS,IAF1B,mBAEPG,EAFO,KAEIC,EAFJ,OAGqBJ,mBAAS,IAH9B,mBAGPK,EAHO,KAGIC,EAHJ,OAIqBN,mBAAS,IAJ9B,mBAIPO,EAJO,KAIIC,EAJJ,OAK2BR,mBAAS,IALpC,mBAKPS,EALO,KAKOC,EALP,KA4BT1B,EAAgB,SAAhBA,EAAgBX,GACjBsC,OAAOC,QAAP,6CACDC,EACaxC,GACZL,MAAK,WACJkC,EAAY,IACZE,EAAS,IACTS,IAEC7C,MAAK,SAAA8C,GACJN,EAAa,kBAAC,EAAD,CACXpB,QAAS0B,EACTzB,OAAQgB,EACRf,qBAAsBN,YA4FhC,OAZA+B,qBAAU,WACRF,IAEC7C,MAAK,SAAA8C,GAAa,OAAGN,EACtB,kBAAC,EAAD,CACEpB,QAAS0B,EACTzB,OAAQgB,EACRf,qBAAsBN,UAG1B,IAGE,6BACG,kBAAC,EAAD,CAAezB,QAAS,cACvBkD,EACD,kBAAC,EAAD,CAAclD,QAAS,sBAAuBE,gBA9HvB,SAACuD,GAI3B,IAAMpD,EAAQoD,EAAMC,OAAOrD,MAC3BiD,IAEG7C,MAAK,SAAA8C,GACJR,EAAa1C,GACb4C,EAAa,kBAAC,EAAD,CACXpB,QAAS0B,EACTzB,OAAQzB,EACR0B,qBAAsBN,SAkH2DtB,WAAY2C,IAChG,kBAAC,EAAD,CAAe9C,QAAS,cACxB,0BAAM2D,SA3FW,SAAAF,GACpBA,EAAMG,iBACNN,IAEC7C,MAAK,SAAA8C,GACJ,IAAMM,EAAgB,YAAON,GAC7B,GAAGM,EAAiBC,MAAK,SAAA1B,GAAK,OAAIA,EAAMb,OAASmB,MAC/C,GAAGU,OAAOC,QAAP,UAAkBX,EAAlB,iFAA0G,CAC3G,IAAMqB,EAAmBF,EAAiBG,MAAK,SAAA5B,GAAK,OAAIA,EAAMb,OAASmB,KAAUhB,GAC3EuC,EAAY,CAChB1C,KAAMmB,EACNlB,OAAQoB,GAEVU,EACcS,EAAkBE,GAC/BxD,MAAK,WACJ6C,IAEC7C,MAAK,SAAA8C,GACJZ,EAAY,IACZE,EAAS,IACTI,EAAa,kBAAC,EAAD,CACXpB,QAAS0B,EACTzB,OAAQgB,EACRf,qBAAsBN,WAI3ByC,OAAM,WACLf,EAAgB,kBAAC,EAAD,CACdnD,QAAO,6BAAwBiE,EAAU1C,KAAlC,8CACPJ,SAAS,EACTC,SAAU,kBAAM+C,YAAW,kBAAMhB,EAAgB,MAAK,SAExDG,IAEC7C,MAAK,SAAA8C,GACJZ,EAAY,IACZE,EAAS,IACTI,EAAa,kBAAC,EAAD,CACXpB,QAAS0B,EACTzB,OAAQgB,EACRf,qBAAsBN,iBAW9B6B,EAJiB,CACf/B,KAAMmB,EACNlB,OAAQoB,IAITnC,MAAK,SAAA2D,GACJzB,EAAY,IACZE,EAAS,IACTM,EAAgB,kBAAC,EAAD,CACdnD,QAAO,gBAAWoE,EAAW7C,MAC7BJ,SAAS,EACTC,SAAU,kBAAM+C,YAAW,kBAAMhB,EAAgB,MAAK,SAExDF,EAAa,kBAAC,EAAD,CACXpB,QAASgC,EAAiBQ,OAAOD,GACjCtC,OAAQgB,EACRf,qBAAsBN,aA0B3B,kBAAC,EAAD,CAAczB,QAAS,SAAUE,gBArIZ,SAACuD,GAAD,OAAWd,EAAYc,EAAMC,OAAOrD,QAqIYF,WAAYuC,IACjF,kBAAC,EAAD,CAAcrC,MAAQ,WAAYH,gBApIX,SAACuD,GAAD,OAAWZ,EAASY,EAAMC,OAAOrD,QAoIgBF,WAAYyC,IAClF,6BACE,4BAAQ0B,KAAK,UAAb,SAGJ,kBAAC,EAAD,CAAetE,QAAS,YACvBgD,ICvKRuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8dcce051.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst DisplayHeader = ({ message }) => {\r\n    return(\r\n        <h2>\r\n            {message}\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default DisplayHeader","import React from \"react\"\r\n\r\nconst DisplayInput = ({ message, onChangeHandler, inputValue })=>{\r\n    return(\r\n    <div>\r\n        {message} <input onChange={onChangeHandler} value={inputValue} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DisplayInput","import axios from \"axios\"\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst postPhone = newEntry =>{\r\n    const request = axios.post(baseUrl, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePhone = entryId =>{\r\n    const request = axios.delete(baseUrl + `/${entryId}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replacePhone = (entryId, newPhone) =>{\r\n    const request = axios.put(`${baseUrl}/${entryId}`, newPhone)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, postPhone, deletePhone, replacePhone}","import React from \"react\"\r\n\r\nconst DisplayErrorSuccess = ({ message, success, callback }) =>{\r\n    if(success){\r\n        callback()\r\n        return (\r\n            <div>\r\n                <h1 className=\"success\">\r\n                    {message}\r\n                </h1>\r\n            </div>\r\n        )\r\n    }else{\r\n        callback()\r\n        return (\r\n            <div>\r\n                <h1 className=\"error\">\r\n                    {message}\r\n                </h1>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayErrorSuccess","import React, { useState, useEffect } from 'react'\r\nimport DisplayHeader from \"./DisplayHeader\"\r\nimport DisplayInput from \"./DisplayInput\"\r\nimport phoneService from \"./services/phoneService\"\r\nimport ErrorSuccess from \"./ErrorSuccessMessage\"\r\n\r\nimport \"./index.css\"\r\n\r\nconst DisplayEntry = ({ name, number, deleteHandler, id }) =>{\r\n  return(\r\n    <div>\r\n      {name} {number}\r\n      <button onClick={() => deleteHandler(id)}>\r\n        delete\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DisplayEntries = ({ entries, regVal, onClickDeleteHandler }) =>{\r\n  const regExp = new RegExp(regVal, \"i\")\r\n  const filetedEntries = entries.filter(entry => regExp.test(entry.name))\r\n  const newEntries = filetedEntries.map(entry => <DisplayEntry key={entry.id} name={entry.name} number={entry.number} deleteHandler={onClickDeleteHandler} id={entry.id} />)\r\n\r\n  return(\r\n    <div>\r\n      {newEntries}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () =>{\r\n  const [ userName, setUserName ] = useState(\"\")\r\n  const [ userPhone, setPhone ] = useState(\"\")\r\n  const [ newFilter, setNewFilter ] = useState(\"\")\r\n  const [ entryList, setEntryList ] = useState([])\r\n  const [ errorSuccess, setErrorSuccess ] = useState(\"\")\r\n\r\n  const changeHandlerName = (event) => setUserName(event.target.value)\r\n\r\n  const changeHandlerNumber = (event) => setPhone(event.target.value)\r\n\r\n  const changeHandlerFilter = (event) => {\r\n    //maybe we can do something better with this, as it needs to send\r\n    //request to the server in order to filder the data, main issue\r\n    //is the DisplayEntries component\r\n    const value = event.target.value\r\n    phoneService\r\n      .getAll()\r\n      .then(phoneDatabase =>{\r\n        setNewFilter(value)\r\n        setEntryList(<DisplayEntries \r\n          entries={phoneDatabase}\r\n          regVal={value}\r\n          onClickDeleteHandler={deleteHandler}\r\n           />)\r\n        })\r\n  }\r\n\r\n  const deleteHandler = entryId =>{\r\n    if(window.confirm(`Do you really wish to delete ths number?`)){\r\n      phoneService\r\n      .deletePhone(entryId)\r\n      .then(()=>{\r\n        setUserName(\"\")\r\n        setPhone(\"\")\r\n        phoneService\r\n        .getAll()\r\n        .then(phoneDatabase =>{\r\n          setEntryList(<DisplayEntries \r\n            entries={phoneDatabase}\r\n            regVal={newFilter}\r\n            onClickDeleteHandler={deleteHandler}\r\n             />)\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const submitHandler = event =>{\r\n    event.preventDefault()\r\n    phoneService\r\n    .getAll()\r\n    .then(phoneDatabase =>{\r\n      const newPhoneDatabase = [...phoneDatabase]\r\n      if(newPhoneDatabase.some(entry => entry.name === userName)){\r\n        if(window.confirm(`${userName} is already added to the phonebook, replace the old number with the new one?`)){\r\n          const phoneToReplaceId = newPhoneDatabase.find(entry => entry.name === userName).id\r\n          const newEntry2 = {\r\n            name: userName,\r\n            number: userPhone\r\n          }\r\n          phoneService\r\n          .replacePhone(phoneToReplaceId, newEntry2)\r\n          .then(() =>{\r\n            phoneService\r\n            .getAll()\r\n            .then(phoneDatabase =>{\r\n              setUserName(\"\")\r\n              setPhone(\"\")\r\n              setEntryList(<DisplayEntries \r\n                entries={phoneDatabase}\r\n                regVal={newFilter}\r\n                onClickDeleteHandler={deleteHandler}\r\n              />)\r\n            })\r\n          })\r\n          .catch(() =>{\r\n            setErrorSuccess(<ErrorSuccess \r\n              message={`The information of ${newEntry2.name} has already been removed from the server `}\r\n              success={false}\r\n              callback={() => setTimeout(() => setErrorSuccess(\"\"), 5000)}\r\n            />)\r\n            phoneService\r\n            .getAll()\r\n            .then(phoneDatabase =>{\r\n              setUserName(\"\")\r\n              setPhone(\"\")\r\n              setEntryList(<DisplayEntries \r\n                entries={phoneDatabase}\r\n                regVal={newFilter}\r\n                onClickDeleteHandler={deleteHandler}\r\n              />)\r\n            })\r\n          })\r\n        }\r\n        //no nothing otherwise\r\n      }else{\r\n        const newEntry = {\r\n          name: userName,\r\n          number: userPhone\r\n        }\r\n        phoneService\r\n        .postPhone(newEntry)\r\n        .then(addedPhone=>{\r\n          setUserName(\"\")\r\n          setPhone(\"\")\r\n          setErrorSuccess(<ErrorSuccess \r\n            message={`added ${addedPhone.name}`}\r\n            success={true}\r\n            callback={() => setTimeout(() => setErrorSuccess(\"\"), 5000)} \r\n            />)\r\n          setEntryList(<DisplayEntries \r\n            entries={newPhoneDatabase.concat(addedPhone)}\r\n            regVal={newFilter}\r\n            onClickDeleteHandler={deleteHandler}\r\n             />)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    phoneService\r\n    .getAll()\r\n    .then(phoneDatabase=> setEntryList(\r\n    <DisplayEntries\r\n      entries={phoneDatabase}\r\n      regVal={newFilter}\r\n      onClickDeleteHandler={deleteHandler}\r\n       />))\r\n  },\r\n  [])\r\n\r\n  return(\r\n    <div>\r\n       <DisplayHeader message={\"Phonebook\"} />\r\n       {errorSuccess}\r\n       <DisplayInput message={\"filter shown with: \"} onChangeHandler={changeHandlerFilter} inputValue={newFilter} />\r\n       <DisplayHeader message={\"add a new\"} />\r\n       <form onSubmit={submitHandler}>\r\n       <DisplayInput message={\"name: \"} onChangeHandler={changeHandlerName} inputValue={userName} />\r\n       <DisplayInput value ={\"number: \"} onChangeHandler={changeHandlerNumber} inputValue={userPhone} />\r\n         <div>\r\n           <button type=\"submit\">add</button>\r\n         </div>\r\n       </form>\r\n       <DisplayHeader message={\"Numbers\"} />\r\n       {entryList}\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default App","// import ReactDOM from 'react-dom'\n// import React from 'react'\n// import App from './components/src/App'\n\n// ReactDOM.render(<App />, document.getElementById('root'))\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/src/App'\n\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}